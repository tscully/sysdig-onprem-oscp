apiVersion: v1
kind: Template
labels:
  template: sysdig-cloud-template
metadata:
  annotations:
    description: |-
      Sysdig Cloud Service template to facilitate Sysdig Monitor backend to run in OpenShift within your own data center or VPC.

      NOTE: For more detailed information about the acrhitecture and sizing for thi on-prem service, visit the link https://support.sysdig.com/hc/en-us/articles/115003032526-On-Premises-Software-Sizing-Guide
    iconClass: icon-mysql-database
    openshift.io/display-name: Sysdig Cloud
    openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/db_images/mysql.html
    openshift.io/long-description: This template provides a standalone MySQL server
      with a database created.  The database is stored on persistent storage.  The
      database name, username, and password are chosen via parameters when provisioning
      this service.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    tags: database,mysql
  name: sysdig-cloud
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: sysdigcloud-config
  data:
    mysql.endpoint: ${MYSQL_SERVICE_NAME}
    mysql.user: ${MYSQL_USER}
    mysql.password: ${MYSQL_PASSWORD}
    cassandra.endpoint: ${CASSANDRA_SERVICE_NAME}
    cassandra.secure: ${CASSANDRA_SECURE}
    cassandra.ssl.enabled: ${CASSANDRA_SSL_ENABLED}
    cassandra.user: ${CASSANDRA_USER}
    cassandra.password: ${CASSANDRA_PASSWORD}
    cassandra.port: ${CASSANDRA_PORT}
    cassandra.replication.factor: ${CASSANDRA_REPLICATION_FACTOR}
    cassandra.jvm.options: ${CASSANDRA_JVM_OPTIONS}
    redis.endpoint: ${REDIS_SERVICE_NAME}
    redis.password: ${REDIS_PASSWORD}
    elasticsearch.url: http://${ES_SERVICE_NAME}
    elasticsearch.jvm.options: ${ES_JVM_OPTIONS}
    smtp.server: ${SMTP_SERVER}
    smtp.server.port: ${SMTP_PORT}
    smtp.user: ${SMTP_USER}
    smtp.password: ${SMTP_PASSWORD}
    smtp.tls: ${SMTP_TLS}
    smtp.ssl: ${SMTP_SSL}
    smtp.from.address: ${SMPT_FROM}
    collector.endpoint: ${COLLECTOR_SERVICE_NAME}
    collector.port: ${COLLECTOR_SERVICE_PORT}
    api.url: https://${API_SERVICE_NAME}
    sysdigcloud.default.user: ${SYSDIG_USER}
    sysdigcloud.default.user.password: ${SYSDIG_USER_PASSWORD}
    sysdigcloud.restrict.password.login: ${RESTRICT_LOGIN}
    sysdigcloud.logging.stdout: ${LOGGING_STDOUT}
    sysdigcloud.jvm.options: ${SYSDIG_JVM_OPTIONS}
    sysdigcloud.license: ${LICENSE}
    sysdigcloud.ldap.enabled: ${LDAP_ENABLED}
    sysdigcloud.ldap.endpoint: ${LDAP_SERVER}
    sysdigcloud.ldap.manager.dn: ${LDAP_BIND_DN}
    sysdigcloud.ldap.manager.password: ${LDAP_BIND_PASSWORD}
    sysdigcloud.ldap.root.dn: ${LDAP_ROOT_DN}
    sysdigcloud.ldap.user.search.base: ${LDAP_USER_SEARCH_BASE}
    sysdigcloud.ldap.user.search.filter: ${LDAP_USER_SEARCH_FILTER}
    sysdigcloud.ldap.group.search.base: ${LDAP_GROUP_SEARCH_BASE}
    sysdigcloud.ldap.group.search.filter: ${LDAP_GROUP_SEARCH_FILTER}
    sysdigcloud.ldap.group.membership.filter: ${LDAP_GROUP_MEMBER_FILTER}
    sysdigcloud.captures.cassandra.storage: ${SYSDIG_CASSANDRA_STORAGE}
- apiVersion: v1
  kind: Secret
  metadata:
    name: sysdigcloud-pull-secret
  data:
    .dockerconfigjson: ${QUAY_SECRET}
  type: kubernetes.io/dockerconfigjson
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: sysdigcloud-mysql-config
    labels:
      app: sysdigcloud
  data:
    my.cnf: |-
      [client]
      port   = 3306
      socket   = /var/run/mysqld/mysqld.sock
      default-character-set=utf8

      [mysql]
      default-character-set=utf8
      [mysqld_safe]
      pid-file = /var/run/mysqld/mysqld.pid
      socket   = /var/run/mysqld/mysqld.sock
      nice   = 0
      [mysqld]
      user   = mysql
      pid-file = /var/run/mysqld/mysqld.pid
      socket   = /var/run/mysqld/mysqld.sock
      port   = 3306
      basedir    = /usr
      datadir    = /var/lib/mysql
      tmpdir   = /tmp
      lc-messages-dir  = /usr/share/mysql
      explicit_defaults_for_timestamp
      collation-server = utf8_unicode_ci
      init-connect='SET NAMES utf8'
      character-set-server = utf8
      log-error  = /var/log/mysql/error.log
      # Recommended in standard MySQL setup
      sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
      # Disabling symbolic-links is recommended to prevent assorted security risks
      symbolic-links=0
      !includedir /etc/mysql/conf.d/
- apiVersion: v1
  kind: Service
  metadata:
    name: ${MYSQL_SERVICE_NAME}
    labels:
      app: sysdigcloud
      role: mysql
  spec:
    ports:
      - port: 3306
    selector:
      app: sysdigcloud
      role: mysql
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: sysdigcloud-mysql
  spec:
    template:
      metadata:
        labels:
          app: sysdigcloud
          role: mysql
      spec:
        containers:
          - name: mysql
            image: mysql:5.6.34
            env:
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: mysql.password
              - name: MYSQL_USER
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: mysql.user
              - name: MYSQL_PASSWORD
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: mysql.password
              - name: MYSQL_DATABASE
                value: draios
            volumeMounts:
              - name: mysql-config
                mountPath: /etc/mysql/my.cnf
                subPath: my.cnf
              - name: data
                mountPath: /var/lib/mysql
        volumes:
          - name: mysql-config
            configMap:
              name: sysdigcloud-mysql-config
          - name: data
            emptyDir: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: ${REDIS_SERVICE_NAME}
    labels:
      app: sysdigcloud
      role: redis
  spec:
    ports:
      - port: 6379
    selector:
      app: sysdigcloud
      role: redis
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: sysdigcloud-redis
  spec:
    template:
      metadata:
        labels:
          app: sysdigcloud
          role: redis
      spec:
        containers:
          - name: redis
            image: quay.io/sysdig/redis:2.8.23
            env:
              - name: REDIS_PASSWORD
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: redis.password
        imagePullSecrets:
          - name: sysdigcloud-pull-secret
- apiVersion: v1
  kind: Service
  metadata:
    name: ${CASSANDRA_SERVICE_NAME}
    labels:
      app: sysdigcloud
      role: cassandra
  spec:
    clusterIP: None
    ports:
      - port: 9042
        name: cql
      - port: 7000
        name: intra-node-communication
      - port: 7001
        name: tls-intra-node-communication
    selector:
      app: sysdigcloud
      role: cassandra
- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: sysdigcloud-cassandra
  spec:
    replicas: 1
    selector:
      app: sysdigcloud
      role: cassandra
    template:
      metadata:
        name: sysdigcloud-cassandra
        labels:
          instance: "1"
          app: sysdigcloud
          role: cassandra
      spec:
        serviceAccountName: sysdigcloud
        containers:
          - image: quay.io/sysdig/cassandra:2.1.15.0
            name: cassandra
            env:
              - name: CASSANDRA_SERVICE
                value: sysdigcloud-cassandra
              - name: CASSANDRA_NUM_SEEDS
                value: "2"
              - name: CASSANDRA_CLUSTER_NAME
                value: sysdigcloud
              - name: JVM_EXTRA_OPTS
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: cassandra.jvm.options
              - name: CASSANDRA_SECURE
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: cassandra.secure
              - name: CASSANDRA_SSL
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: cassandra.ssl.enabled
            volumeMounts:
              - mountPath: /var/lib/cassandra
                name: data
        imagePullSecrets:
          - name: sysdigcloud-pull-secret
        volumes:
          - name: data
            persistentVolumeClaim:
              claimName: cassandra-data
- apiVersion: v1
  kind: Service
  metadata:
    name: ${ES_SERVICE_NAME}
    labels:
      app: sysdigcloud
      role: elasticsearch
  spec:
    clusterIP: None
    ports:
      - port: 9200
        name: api
      - port: 9300
        name: transport-protocol
    selector:
      app: sysdigcloud
      role: elasticsearch
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: sysdigcloud-elasticsearch-1
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          instance: "1"
          app: sysdigcloud
          role: elasticsearch
      spec:
        containers:
          - image: quay.io/sysdig/elasticsearch:5.1.1
            name: elasticsearch
            securityContext:
              privileged: true
            env:
              - name: ELASTICSEARCH_SERVICE
                value: sysdigcloud-elasticsearch
              - name: ELASTICSEARCH_GOSSIP_NODES_NUM
                value: "2"
              - name: ELASTICSEARCH_CLUSTER_NAME
                value: sysdigcloud
              - name: ES_JAVA_OPTS
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: elasticsearch.jvm.options
            volumeMounts:
              - mountPath: /usr/share/elasticsearch/data
                name: data
        serviceAccount: elastic
        serviceAccountName: elastic
        imagePullSecrets:
          - name: sysdigcloud-pull-secret
        volumes:
          - name: data
            emptyDir: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: ${API_SERVICE_NAME}
    labels:
      app: sysdigcloud
      role: api
  spec:
    type: LoadBalancer
    ports:
      - port: 443
        name: secure-api
        targetPort: 443
    selector:
      app: sysdigcloud
      role: api
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: sysdigcloud-api
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: sysdigcloud
          role: api
      spec:
        containers:
          - name: api
            image: quay.io/sysdig/sysdigcloud-backend:722
            volumeMounts:
              - name: logs
                mountPath: /var/log/sysdigcloud
              - name: config
                mountPath: /opt/kubernets_config
              - name: ssl
                mountPath: /opt/certs/
            env:
              - name: ROLES
                value: api
              - name: LOG_ROLE
                value: api
              - name: LOG_TO_STDOUT
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: sysdigcloud.logging.stdout
              - name: API_ENDPOINT
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: api.url
              - name: JVM_EXTRA_OPTS
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: sysdigcloud.jvm.options
            readinessProbe:
              httpGet:
                path: /api/ping
                port: 9000
              initialDelaySeconds: 30
              timeoutSeconds: 2
        imagePullSecrets:
          - name: sysdigcloud-pull-secret
        volumes:
          - name: logs
          - name: config
            configMap:
              name: sysdigcloud-config
          - name: ssl
            secret:
              secretName: sysdigcloud-ssl-secret
- apiVersion: v1
  kind: Service
  metadata:
    name: ${COLLECTOR_SERVICE_NAME}
    labels:
      app: sysdigcloud
      role: collector
  spec:
    type: LoadBalancer
    ports:
      - port: 6443
        name: secure-collector
        targetPort: 6443
    selector:
      app: sysdigcloud
      role: collector
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: sysdigcloud-collector
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: sysdigcloud
          role: collector
      spec:
        containers:
          - name: collector
            image: quay.io/sysdig/sysdigcloud-backend:722
            volumeMounts:
              - name: logs
                mountPath: /var/log/sysdigcloud
              - name: config
                mountPath: /opt/kubernets_config
              - name: ssl
                mountPath: /opt/certs/
            env:
              - name: ROLES
                value: collector
              - name: LOG_ROLE
                value: collector
              - name: LOG_TO_STDOUT
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: sysdigcloud.logging.stdout
              - name: API_ENDPOINT
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: api.url
              - name: JVM_EXTRA_OPTS
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: sysdigcloud.jvm.options
            readinessProbe:
              tcpSocket:
                port: 6000
              initialDelaySeconds: 30
              timeoutSeconds: 2
        imagePullSecrets:
          - name: sysdigcloud-pull-secret
        volumes:
          - name: logs
          - name: config
            configMap:
              name: sysdigcloud-config
          - name: ssl
            secret:
              secretName: sysdigcloud-ssl-secret
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: sysdigcloud-worker
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: sysdigcloud
          role: worker
      spec:
        containers:
          - name: worker
            image: quay.io/sysdig/sysdigcloud-backend:722
            volumeMounts:
              - name: logs
                mountPath: /var/log/sysdigcloud
              - name: config
                mountPath: /opt/kubernets_config
              - name: ssl
                mountPath: /opt/certs/
            env:
              - name: ROLES
                value: worker
              - name: LOG_ROLE
                value: worker
              - name: LOG_TO_STDOUT
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: sysdigcloud.logging.stdout
              - name: API_ENDPOINT
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: api.url
              - name: JVM_EXTRA_OPTS
                valueFrom:
                  configMapKeyRef:
                    name: sysdigcloud-config
                    key: sysdigcloud.jvm.options
            readinessProbe:
              httpGet:
                path: /api/ping
                port: 9000
              initialDelaySeconds: 30
              timeoutSeconds: 2
        imagePullSecrets:
          - name: sysdigcloud-pull-secret
        volumes:
          - name: logs
          - name: config
            configMap:
              name: sysdigcloud-config
          - name: ssl
            secret:
              secretName: sysdigcloud-ssl-secret
parameters:
- description: The name of the OpenShift Service exposed for the database
  displayName: Database Service Name
  name: MYSQL_SERVICE_NAME
  required: true
  value: sysdigcloud-mysql
- description: Username for MySQL user that will be used for accessing the database
  displayName: MySQL Connection Username
  name: MYSQL_USER
  required: true
  value: mysql
- description: Password for the MySQL connection user
  displayName: MySQL Connection Password
  name: MYSQL_PASSWORD
  required: true
  value: password
- description: The name of the OpenShift Service exposed for Cassandra
  displayName: Cassandra Service Name
  name: CASSANDRA_SERVICE_NAME
  required: true
  value: sysdigcloud-cassandra
- description: Enable or disable cassandra authentication and authorization in sysdigcloud cassandra image
  displayName: Cassandra authentication and authorization
  name: CASSANDRA_SECURE
  value: "false"
- description: Enable cassandra internodes and client encryption
  displayName: Cassandra SSL
  name: CASSANDRA_SSL_ENABLED
  value: "false"
- description: Username for Cassandra user that will be used for accessing the database
  displayName: Cassandra Connection Username
  name: CASSANDRA_USER
- description: Password for the Cassandra connection user
  displayName: Cassandra Connection Password
  name: CASSANDRA_PASSWORD
- description: Cassandra Port for CQL client
  displayName: Cassandra CQL Port
  name: CASSANDRA_PORT
  required: true
  value: "9042"
- description: Cassandra replication factor to use. This parameter will just be applied during the keyspace creation, no changes are done to an already existing keyspace
  displayName: Cassandra replication factor
  name: CASSANDRA_REPLICATION_FACTOR
  value: "1"
- description: Cassandra JVM options. For heavy load environments you'll need to tweak the memory or garbage
  displayName: Cassandra custom JVM options
  name: CASSANDRA_JVM_OPTIONS
- description: The name of the OpenShift Service exposed for Redis
  displayName: Redis Service Name
  name: REDIS_SERVICE_NAME
  required: true
  value: sysdigcloud-redis
- description: Password for the Redis connection
  displayName: Redis Connection Password
  name: REDIS_PASSWORD
- description: The name of the OpenShift Service exposed for Elasticsearch
  displayName: Elasticsearch Service Name
  name: ES_SERVICE_NAME
  required: true
  value: sysdigcloud-elasticsearch
- description: Elasticsearch JVM options. For heavy load environments you'll need to tweak the memory or garbage collection settings
  displayName: Elasticsearch custom JVM options
  name: ES_JVM_OPTIONS
- description: SMTP server address for email notifications
  displayName: SMTP server address
  name: SMTP_SERVER
- description: SMTP server port for email notifications
  displayName: SMTP server port
  name: SMTP_PORT
  value: "25"
- description: SMTP user for email notifications
  displayName: SMTP user
  name: SMTP_USER
- description: SMTP password for email notifications
  displayName: SMTP password
  name: SMTP_PASSWORD
- description: SMTP server using TLS
  displayName: SMTP enable TLS
  name: SMTP_TLS
  value: "false"
- description: SMTP server using SSL
  displayName: SMTP enable SSL
  name: SMTP_SSL
  value: "false"
- description: SMTP From Header used for email notifications
  displayName: SMTP From Header
  name: SMPT_FROM
- description: The name of the OpenShift Service exposed for the Collector
  displayName: Collector service name
  name: COLLECTOR_SERVICE_NAME
  value: sysdigcloud-collector
  required: true
- description: Collector Service Port
  displayName: Collector Service Port
  name: COLLECTOR_SERVICE_PORT
  value: "6443"
  required: true
- description: The name of the OpenShift Service exposed for the API
  displayName: API service name
  name: API_SERVICE_NAME
  value: sysdigcloud-api
  required: true
- description: Sysdig Cloud default user
  displayName: Sysdig Cloud default user
  name: SYSDIG_USER
  value: admin@redhat.com
  required: true
- description: Sysdig Cloud default user password
  displayName: Sysdig Cloud default user password
  name: SYSDIG_USER_PASSWORD
  value: redhat
  required: true
- description: Restrict password login to default user. Force all non-default users to login using the configured IdP
  displayName: Restrict password login to default user
  name: RESTRICT_LOGIN
  value: "false"
  required: true
- description: Forward application logs to stdout
  displayName: Forward application logs to stdout
  name: LOGGING_STDOUT
  value: "false"
- description: Sysdig Cloud application JVM options. For heavy load environments you'll need to tweak the memory or garbage collection settings
  displayName: Sysdig Cloud application JVM options
  name: SYSDIG_JVM_OPTIONS
- description: Sysdig Cloud license
  displayName: Sysdig Cloud license
  name: LICENSE
  value: 56c337db17adab5622c52953535f51e4814aaaf7861e94a902229b64432e7a6b6a915259d26f5a998594e4fd8615cefa6055acd02a42d649c6d30808192fc841f7c836c517cee30f8aa6adf71da238cfe64153ea829ecddb7269b8a3d9a0ba92b07dbd33a679f5cc9667cec7878051d00bae60fa8bef1f483d0e8db2a28c5549d6bd089c5f3549ac637b0eebdee541434227d107989a08d2fc626c49ddb36d2fd71ad47c29deb0202ee284103bc2a6c7
  required: true
- description: Enable or disable Sysdig Cloud LDAP integration
  displayName: Sysdig Cloud LDAP integration
  name: LDAP_ENABLED
  value: "false"
- description: LDAP server endpoint
  displayName: LDAP server endpoint
  name: LDAP_SERVER
- description: LDAP BIND DN
  displayName: LDAP BIND DN
  name: LDAP_BIND_DN
- description: LDAP BIND Password
  displayName: LDAP BIND Password
  name: LDAP_BIND_PASSWORD
- description: LDAP root DN
  displayName: LDAP root DN
  name: LDAP_ROOT_DN
- description: LDAP user search base. If you specify a relative DN (from the root DN), Sysdig Cloud will further narrow down searches to the sub-tree.
  displayName: LDAP user search base
  name: LDAP_USER_SEARCH_BASE
- description: LDAP user search filter. This field determines the query to be run to identify the user record. The query is almost always uid={0} as per defined in RFC 2798. NB. Escape special characters like &
  # (eg: (\&(objectClass=organizationalPerson)(sAMAccountName={0}))
  displayName: LDAP user search filter
  name: LDAP_USER_SEARCH_FILTER
- description:  Group search base. This field determines the query to be run to identify the organizational unit that contains groups.
  # (eg: ou=Organization,ou=Users)
  displayName: Group search base
  name: LDAP_GROUP_SEARCH_BASE
- description: Group search filter. This field is used to determine if a named group exists. If you know your LDAP server only stores group information in one specific object class, then you can improve group search performance by restricting the filter to just the required object class.
  # (eg: cn=sysdigcloud)
  displayName: Group search filter
  name: LDAP_GROUP_SEARCH_FILTER
- description:  Group membership filter. The group membership filter field controls the search filter that is used to determine group membership. You are normally safe leaving this field unchanged, the default value ( | (member={0}) (uniqueMember={0}) (memberUid={1})) will be used.
  # (eg: member={0})
  displayName: Group membership filter
  name: LDAP_GROUP_MEMBER_FILTER
- description: Store Sysdig captures using Cassandra instead of S3
  displayName: Store Sysdig captures using Cassandra
  name: SYSDIG_CASSANDRA_STORAGE
  value: "false"
- description: Quay.io registry server secret - base64 format
  displayName: Quay.io registry server secret - base64 format
  name: QUAY_SECRET
  value: ewogICJhdXRocyI6IHsKICAgICJxdWF5LmlvIjogewogICAgICAiYXV0aCI6ICJjM2x6WkdsbkszSmxaRjlvWVhSZlpXMWxZVjl2Y0dWdVgybHVibTkyWVhScGIyNWZiR0ZpT2tVMlZsVlVNMVUzV0ZNM1NrRlJWREZIVGxGR1R6QmFOVGRYVGtGVlJVZFBXRnBGVFZaUVRGWlNObHBJVlVSTk5VbzNOVVJEVERjNVNGQTJSVE5PVmxJPSIsCiAgICAgICJlbWFpbCI6ICIiCiAgICB9CiAgfQp9
