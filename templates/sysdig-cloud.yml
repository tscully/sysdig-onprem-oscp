apiVersion: v1
kind: Template
labels:
  template: sysdig-cloud-template
metadata:
  annotations:
    description: |-
      Sysdig Cloud Service template to facilitate Sysdig Monitor backend to run in OpenShift within your own data center or VPC.

      NOTE: For more detailed information about the acrhitecture and sizing for thi on-prem service, visit the link https://support.sysdig.com/hc/en-us/articles/115003032526-On-Premises-Software-Sizing-Guide
    iconClass: icon-mysql-database
    openshift.io/display-name: Sysdig Cloud
    openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/db_images/mysql.html
    openshift.io/long-description: This template provides a standalone MySQL server
      with a database created.  The database is stored on persistent storage.  The
      database name, username, and password are chosen via parameters when provisioning
      this service.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    tags: database,mysql
  name: sysdig-cloud
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: sysdigcloud-config
  data:
    # Required: MySQL endpoint DNS/IP. If MySQL is deployed as a Kubernetes service,
    # this will be the service name. If using an external database, put the proper address
    mysql.endpoint: mysql
    # Required: MySQL user
    mysql.user: root
    # Required: MySQL password
    mysql.password: JQQ4USSJWHMX3gcF
    # Required: Cassandra endpoint DNS/IP. If Cassandra is deployed as a Kubernetes service,
    # this will be the service name. If using an external database, put the proper address
    # (the address of a single node will be sufficient)
    cassandra.endpoint: cassandra
    # Optional: enable or disable cassandra authentication and authorization in sysdigcloud cassandra image,
    # if you want to enable it, make sure to follow the support guide in the official sysdigcloud documentation
    cassandra.secure: "false"
    # Optional: Enable cassandra internodes and client encryption
    cassandra.ssl.enabled: "false"
    # Optional: Specify Cassandra cipher suites to use. This option is available only when using external cassandra clusters.
    # Comma separated value. Example: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"
    cassandra.ssl.ciphers: ""
    # Optional: Cassandra user
    cassandra.user: ""
    # Optional: Cassandra password
    cassandra.password: ""
    # Required: CQL native clients port
    cassandra.port: "9042"
    # Optional: Cassandra replication factor to use. This parameter will just be applied during the
    # keyspace creation, no changes are done to an already existing keyspace
    cassandra.replication.factor: "1"
    # Optional: Cassandra JVM options, when Cassandra is started as a Kubernetes service using
    # the provided manifests. For heavy load environments you'll need to tweak the memory or garbage
    # collection settings
    cassandra.jvm.options: ""
    # Required: Redis endpoint DNS/IP. If Redis is deployed as a Kubernetes service,
    # this will be the service name. If using an external database, put the proper address
    redis.endpoint: redis
    # Optional: Redis password
    redis.password: ""
    # Required: Elasticsearch URL. If Elasticsearch is deployed as a Kubernetes service,
    # this will be the service name. If using an external database, put the proper address
    elasticsearch.url: http://elasticsearch
    # Optional: Elasticsearch JVM options, when Elasticsearch is started as a Kubernetes service using
    # the provided manifests. For heavy load environments you'll need to tweak the memory or garbage
    # collection settings
    elasticsearch.jvm.options: ""
    # Optional: SMTP server address, needed for Sysdig Cloud to send email notifications
    smtp.server: ""
    # Optional: SMTP server port
    smtp.server.port: "25"
    # Optional: SMTP user (leave empty if your server doesn't require authentication)
    smtp.user: ""
    # Optional: SMTP password (leave empty if your server doesn't require authentication)
    smtp.password: ""
    # Optional: SMTP Secure Connection options
    smtp.tls: "false"
    smtp.ssl: "false"
    # Optional: From Header used for email notifications
    smtp.from.address: ""
    # Required: Collector service endpoint DNS/IP. If the collector needs to be reachable outside the Kubernetes
    # cluster, this will likely need to be set to the address of the Kubernetes nodes (if using a NodePort service) or the
    # cloud load balancer created by the service (if using a LoadBalancer service). Otherwise, it can be left
    # to the default value and the collector will just be routable within the Kubernetes cluster.
    collector.endpoint: sysdigcloud-collector
    # Required: Collector port. If using a LoadBalancer service for the collector, the port can be left as the default.
    # If using a NodePort service, this will need to be set to the dynamic port allocated by Kubernetes on the nodes
    # (obtained via kubectl describe service sysdigcloud-collector)
    collector.port: "6443"
    # Required: Api service https URL. If the api needs to be reachable outside the Kubernetes
    # cluster, this will likely need to be set to the address of the Kubernetes nodes and the dynamic port allocated
    # by Kubernetes (if using a NodePort service) or the cloud load balancer created by the service (if using a LoadBalancer service).
    # Otherwise, it can be left to the default value and the api will just be routable within the Kubernetes cluster.
    api.url: https://sysdigcloud-api:443
    # Required: Sysdig Cloud default user. This will be used for the initial login in the web interface
    sysdigcloud.default.user: test@sysdig.com
    # Required: Sysdig Cloud default user password
    sysdigcloud.default.user.password: test
    # Required: Restrict password login to default user
    # Force all non-default users to login using the configured IdP
    sysdigcloud.restrict.password.login: "false"
    # Optional: forward application logs to stdout
    sysdigcloud.logging.stdout: "false"
    # Optional: Sysdig Cloud application JVM options. For heavy load environments you'll need to tweak
    # the memory or garbage collection settings
    sysdigcloud.jvm.options: ""
    # Required: Sysdig Cloud license
    sysdigcloud.license: ""
    # Optional: OAuth allowed domains (comma separated list of domains)
    sysdigcloud.oauth.allowed.domains.list: ""
    # Optional: Sysdig Cloud Google OAuth Client ID
    sysdigcloud.google.oauth.client.id: ""
    # Optional: Sysdig Cloud Google OAuth Client Secret
    sysdigcloud.google.oauth.client.secret: ""
    # Required: enable or disable Sysdig Cloud LDAP integration
    sysdigcloud.ldap.enabled: "false"
    # Optional: LDAP server endpoint (eg: ldaps://1.2.3.4:636)
    sysdigcloud.ldap.endpoint: ""
    # Optional: LDAP DN manager (eg: cn=servicer_acccount,ou=Service accounts,dc=demo,dc=com)
    sysdigcloud.ldap.manager.dn: ""
    # Optional: LDAP Manager password
    sysdigcloud.ldap.manager.password: ""
    # Optional: LDAP root DN
    sysdigcloud.ldap.root.dn: ""
    # Optional: LDAP user search base
    # If you specify a relative DN (from the root DN), Sysdig Cloud will further narrow down searches to the sub-tree.
    sysdigcloud.ldap.user.search.base: ""
    # Optional: LDAP user search filter (eg: (\&(objectClass=organizationalPerson)(sAMAccountName={0})).
    # This field determines the query to be run to identify the user record. The query is almost always uid={0} as per defined in RFC 2798.
    # NB. Escape special characters like &
    sysdigcloud.ldap.user.search.filter: ""
    # Optional: Group search base (eg: ou=Organization,ou=Users)
    # This field determines the query to be run to identify the organizational unit that contains groups.
    sysdigcloud.ldap.group.search.base: ""
    # Optional: Group search filter (eg: cn=sysdigcloud)
    # This field is used to determine if a named group exists. If you know your LDAP server only stores group information
    # in one specific object class, then you can improve group search performance by restricting the filter to just the required object class.
    sysdigcloud.ldap.group.search.filter: ""
    # Optional: Group membership filter (eg: member={0})
    # The group membership filter field controls the search filter that is used to determine group membership.
    # You are normally safe leaving this field unchanged, the default value ( | (member={0}) (uniqueMember={0}) (memberUid={1})) will be used.
    sysdigcloud.ldap.group.membership.filter: ""
    # Optional: Store Sysdig captures using Cassandra instead of S3
    # NB. This affects cassandra storage
    sysdigcloud.captures.cassandra.storage: "false"
parameters:
- description: The name of the OpenShift Service exposed for the database
  displayName: Database Service Name
  name: MYSQL_SERVICE_NAME
  required: true
  value:
- description: Username for MySQL user that will be used for accessing the database
  displayName: MySQL Connection Username
  name: MYSQL_USER
  required: true
- description: Password for the MySQL connection user
  displayName: MySQL Connection Password
  name: MYSQL_PASSWORD
  required: true
- description: The name of the OpenShift Service exposed for Cassandra
  displayName: Cassandra Service Name
  name: CASSANDRA_SERVICE_NAME
  required: true
  value:
- description: Enable or disable cassandra authentication and authorization in sysdigcloud cassandra image
  displayName: Cassandra authentication and authorization
  name: CASSANDRA_SECURE
  value: "false"
- description: Enable cassandra internodes and client encryption
  displayName: Cassandra SSL
  name: CASSANDRA_SSL_ENABLED
  value: "false"
- description: Username for Cassandra user that will be used for accessing the database
  displayName: Cassandra Connection Username
  name: CASSANDRA_USER
- description: Password for the Cassandra connection user
  displayName: Cassandra Connection Password
  name: CASSANDRA_PASSWORD
- description: Cassandra Port for CQL client
  displayName: Cassandra CQL Port
  name: CASSANDRA_PORT
  required: true
  value: "9042"
- description: Cassandra replication factor to use. This parameter will just be applied during the keyspace creation, no changes are done to an already existing keyspace
  displayName: Cassandra replication factor
  name: CASSANDRA_REPLICATION_FACTOR
  value: "1"
- description: Cassandra JVM options. For heavy load environments you'll need to tweak the memory or garbage
  displayName: Cassandra custom JVM options
  name: CASSANDRA_JVM_OPTIONS
- description: The name of the OpenShift Service exposed for Redis
  displayName: Redis Service Name
  name: REDIS_SERVICE_NAME
  required: true
  value:
- description: Password for the Redis connection
  displayName: Redis Connection Password
  name: REDIS_PASSWORD
- description:
  displayName:
  name:
  value:
- description:
  displayName:
  name:
  value:
- description:
  displayName:
  name:
  value:
